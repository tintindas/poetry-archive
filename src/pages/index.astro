---
import "../../public/styles/global.css"
const allPoems = await Astro.glob('../pages/poems/*.md')
const randomPoem = allPoems[Math.floor(Math.random() * allPoems.length)];
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href={`${import.meta.env.BASE_URL}/favicon.svg`} />
		<meta name="generator" content={Astro.generator} />
		<title>Poetry Archive</title>
	</head>
	<body>
		<h1>Poetry Archive</h1>
    <main>
      <div>
        {allPoems.map((p) => 
          <li>
              <h3>
                <a class="link" href={p.url}>
                  {p.frontmatter.title}
                </a>
              </h3>
              by
              <span>{p.frontmatter.poet}</span>
          </li>
        )}
      </div>
      <div>
        <h2>{randomPoem.frontmatter.title}</h2>
        <h3 class="poet">by {randomPoem.frontmatter.poet}</h3>
        <div set:html={randomPoem.compiledContent()}></div>
      </div>
    </main>
	</body>
</html>

<style>
  .link {
    color: var(--text-slate);
  }

  body {
    padding: 1rem 1rem;
  }

  h1 {
    margin: 0rem 1rem;
  }

  h2 {
    margin-bottom: 1rem;
  }

  .poet {
    margin-bottom: 1rem;
  }

  h3 {
    display: inline-block;
  }

  main {
    margin: 1rem 1rem;
    margin-top: 3rem;
    display: grid;
    grid-template-columns: 1fr 1fr;
  }

  li {
    list-style: none;
    margin-block: 0.7rem;
  }

  p {
    margin-block: 0.5rem;
  }
</style>
